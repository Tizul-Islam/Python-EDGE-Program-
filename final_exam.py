# -*- coding: utf-8 -*-
"""Final_Exam.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iCUZMfvosRDyi8EG19OlRr69hIr7zgME

# **Problem 5**
"""

temperatures = [28, 32, 35, 31, 29, 30, 33, 36, 27, 25, 34, 30, 29, 37, 38, 26, 31, 35, 33, 32, 36, 34, 29, 28, 27, 35, 32, 30, 31, 33]

temperatures_above_32 = [temp for temp in temperatures if temp > 32]
print("Temperatures above 32°C:", temperatures_above_32)

classification = [("Hot", temp) if temp > 35 else ("Warm", temp) if 30 <= temp <= 35 else ("Cool", temp) for temp in temperatures]
print("Temperature classifications:", classification)


monthly_average = sum(temperatures) / len(temperatures)
temperature_differences = [temp - monthly_average for temp in temperatures]
print("Temperature differences from monthly average:", temperature_differences)

"""# **Problem 04**"""

import numpy as np


np.random.seed(42)
data = np.random.randn(10000)


mean_value = np.mean(data)
median_value = np.median(data)
std_dev = np.std(data)



min_value = np.min(data)
max_value = np.max(data)



count_above_mean = np.sum(data > mean_value)



normalized_data = (data - min_value) / (max_value - min_value)



print(f"Mean: {mean_value}\n")
print(f"Median: {median_value}\n")
print(f"Standard Deviation: {std_dev}\n")
print(f"Minimum Value: {min_value}\n")
print(f"Maximum Value: {max_value}\n")
print(f"Number of values greater than the mean: {count_above_mean}\n")
print(f"First 10 normalized values: {normalized_data[:10]}")

"""# **Problem 01**"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd


df = pd.read_csv('/content/sample_data/employees_large.csv')


average_salaries = df.groupby('Department')['Salary'].mean()


highest_avg_salary_dept = average_salaries.idxmax()
highest_avg_salary = average_salaries.max()

print(f"The department with the highest average salary is {highest_avg_salary_dept} with an average salary of {highest_avg_salary:.2f}")

"""# **problem 02**"""

import pandas as pd


df = pd.read_csv('/content/sample_data/sales_large.csv')
data = df.head()

product_total_sales = df.groupby('Product')['Sales'].sum().reset_index()


max_sales_product = product_total_sales.loc[product_total_sales['Sales'].idxmax()]


print(f"The product with the highest total sales across all regions is {max_sales_product['Product']} with total sales of {max_sales_product['Sales']}.")

"""# **Problem 03**"""

import numpy as np


A = np.array([[2, 4, 6],
              [1, 3, 5],
              [7, 9, 11]])

B = np.array([[8, 5, 2],
              [7, 4, 1],
              [6, 3, 0]])

sum_matrix = A + B
print("Element-wise sum (A + B):")
print(sum_matrix)


product_matrix = A * B
print("\nElement-wise product (A * B):")
print(product_matrix)


B_transpose = B.T

dot_product = np.dot(A, B_transpose)
print("\nDot product (A ⋅ B^T):")
print(dot_product)


determinant_A = np.linalg.det(A)
print("\nDeterminant of A:")
print(determinant_A)